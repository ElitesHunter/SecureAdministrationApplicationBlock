//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace EnterpriseServices.SecurityService.API.AuthenticationService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuthenticationServiceSoap", Namespace="urn:Masterduner@Yeah.net")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DbHelper))]
    public partial class AuthenticationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExecuteWinNTAuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePassphraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockAccountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuthenticationService() {
            this.Url = global::EnterpriseServices.SecurityService.API.Properties.Settings.Default.EH_Security_OpenAPIs_SDK_AuthenticationService_AuthenticationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExecuteWinNTAuthenticateCompletedEventHandler ExecuteWinNTAuthenticateCompleted;
        
        /// <remarks/>
        public event CreateStaffAccountCompletedEventHandler CreateStaffAccountCompleted;
        
        /// <remarks/>
        public event UpdatePassphraseCompletedEventHandler UpdatePassphraseCompleted;
        
        /// <remarks/>
        public event UnlockAccountCompletedEventHandler UnlockAccountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Masterduner@Yeah.net/WindowsAuthentication", RequestElementName="WindowsAuthentication", RequestNamespace="urn:Masterduner@Yeah.net", ResponseElementName="WindowsAuthenticationResponse", ResponseNamespace="urn:Masterduner@Yeah.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WindowsAuthenticationResult")]
        public WinNTAuthenticateStatus ExecuteWinNTAuthenticate(string userName, string ipAddress, string hostName) {
            object[] results = this.Invoke("ExecuteWinNTAuthenticate", new object[] {
                        userName,
                        ipAddress,
                        hostName});
            return ((WinNTAuthenticateStatus)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteWinNTAuthenticateAsync(string userName, string ipAddress, string hostName) {
            this.ExecuteWinNTAuthenticateAsync(userName, ipAddress, hostName, null);
        }
        
        /// <remarks/>
        public void ExecuteWinNTAuthenticateAsync(string userName, string ipAddress, string hostName, object userState) {
            if ((this.ExecuteWinNTAuthenticateOperationCompleted == null)) {
                this.ExecuteWinNTAuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteWinNTAuthenticateOperationCompleted);
            }
            this.InvokeAsync("ExecuteWinNTAuthenticate", new object[] {
                        userName,
                        ipAddress,
                        hostName}, this.ExecuteWinNTAuthenticateOperationCompleted, userState);
        }
        
        private void OnExecuteWinNTAuthenticateOperationCompleted(object arg) {
            if ((this.ExecuteWinNTAuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteWinNTAuthenticateCompleted(this, new ExecuteWinNTAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Masterduner@Yeah.net/CreateStaffAccount", RequestNamespace="urn:Masterduner@Yeah.net", ResponseNamespace="urn:Masterduner@Yeah.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateStaffAccount(AccountExpandoProperty account) {
            object[] results = this.Invoke("CreateStaffAccount", new object[] {
                        account});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffAccountAsync(AccountExpandoProperty account) {
            this.CreateStaffAccountAsync(account, null);
        }
        
        /// <remarks/>
        public void CreateStaffAccountAsync(AccountExpandoProperty account, object userState) {
            if ((this.CreateStaffAccountOperationCompleted == null)) {
                this.CreateStaffAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffAccountOperationCompleted);
            }
            this.InvokeAsync("CreateStaffAccount", new object[] {
                        account}, this.CreateStaffAccountOperationCompleted, userState);
        }
        
        private void OnCreateStaffAccountOperationCompleted(object arg) {
            if ((this.CreateStaffAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffAccountCompleted(this, new CreateStaffAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Masterduner@Yeah.net/UpdatePassphrase", RequestNamespace="urn:Masterduner@Yeah.net", ResponseNamespace="urn:Masterduner@Yeah.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePassphrase(System.Guid accountID, string password) {
            this.Invoke("UpdatePassphrase", new object[] {
                        accountID,
                        password});
        }
        
        /// <remarks/>
        public void UpdatePassphraseAsync(System.Guid accountID, string password) {
            this.UpdatePassphraseAsync(accountID, password, null);
        }
        
        /// <remarks/>
        public void UpdatePassphraseAsync(System.Guid accountID, string password, object userState) {
            if ((this.UpdatePassphraseOperationCompleted == null)) {
                this.UpdatePassphraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePassphraseOperationCompleted);
            }
            this.InvokeAsync("UpdatePassphrase", new object[] {
                        accountID,
                        password}, this.UpdatePassphraseOperationCompleted, userState);
        }
        
        private void OnUpdatePassphraseOperationCompleted(object arg) {
            if ((this.UpdatePassphraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePassphraseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Masterduner@Yeah.net/UnlockAccount", RequestNamespace="urn:Masterduner@Yeah.net", ResponseNamespace="urn:Masterduner@Yeah.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnlockAccount(System.Guid accountID) {
            this.Invoke("UnlockAccount", new object[] {
                        accountID});
        }
        
        /// <remarks/>
        public void UnlockAccountAsync(System.Guid accountID) {
            this.UnlockAccountAsync(accountID, null);
        }
        
        /// <remarks/>
        public void UnlockAccountAsync(System.Guid accountID, object userState) {
            if ((this.UnlockAccountOperationCompleted == null)) {
                this.UnlockAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockAccountOperationCompleted);
            }
            this.InvokeAsync("UnlockAccount", new object[] {
                        accountID}, this.UnlockAccountOperationCompleted, userState);
        }
        
        private void OnUnlockAccountOperationCompleted(object arg) {
            if ((this.UnlockAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Masterduner@Yeah.net")]
    public partial class WinNTAuthenticateStatus {
        
        private string statusCodeField;
        
        private bool successfulField;
        
        private string tokenField;
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool Successful {
            get {
                return this.successfulField;
            }
            set {
                this.successfulField = value;
            }
        }
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountExpandoProperty))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Masterduner@Yeah.net")]
    public partial class DbHelper {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountExpandoProperty))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Masterduner@Yeah.net")]
    public partial class AccountBase : DbHelper {
        
        private System.Guid staffIDField;
        
        private string staffOpenIDField;
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Guid uniqueIDField;
        
        /// <remarks/>
        public System.Guid StaffID {
            get {
                return this.staffIDField;
            }
            set {
                this.staffIDField = value;
            }
        }
        
        /// <remarks/>
        public string StaffOpenID {
            get {
                return this.staffOpenIDField;
            }
            set {
                this.staffOpenIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Masterduner@Yeah.net")]
    public partial class AccountExpandoProperty : AccountBase {
        
        private int expirationPolicyLengthField;
        
        private ExpirationPolicy policyField;
        
        private bool isLockedField;
        
        /// <remarks/>
        public int ExpirationPolicyLength {
            get {
                return this.expirationPolicyLengthField;
            }
            set {
                this.expirationPolicyLengthField = value;
            }
        }
        
        /// <remarks/>
        public ExpirationPolicy Policy {
            get {
                return this.policyField;
            }
            set {
                this.policyField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLocked {
            get {
                return this.isLockedField;
            }
            set {
                this.isLockedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Masterduner@Yeah.net")]
    public enum ExpirationPolicy {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        MonthPolicy,
        
        /// <remarks/>
        DayPolicy,
        
        /// <remarks/>
        WeekPolicy,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteWinNTAuthenticateCompletedEventHandler(object sender, ExecuteWinNTAuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteWinNTAuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteWinNTAuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WinNTAuthenticateStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WinNTAuthenticateStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateStaffAccountCompletedEventHandler(object sender, CreateStaffAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdatePassphraseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UnlockAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591